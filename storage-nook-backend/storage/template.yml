AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for Storage Facilities

Globals:
  Function:
    Timeout: 30
    Runtime: python3.9

Resources:
  #########################################
  # API Gateway
  #########################################

  ListFacilitiesApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: ListFacilitiesApi
      StageName: dev
      Auth:
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: arn:aws:cognito-idp:eu-west-1:476114118819:userpool/eu-west-1_G3Sk2lOEJ
            Identity:
              Headers:
                - Authorization

  #########################################
  # DynamoDB Table
  #########################################

  FacilitiesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: FacilitiesTable
      AttributeDefinitions:
        - AttributeName: facilityId
          AttributeType: S
      KeySchema:
        - AttributeName: facilityId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  #########################################
  # IAM Role for Lambda Function
  #########################################

  ListFacilitiesFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: LambdaDynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:Scan
                  - dynamodb:Query
                Resource: '*'
    
  FacilitiesFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: FacilitiesTableAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:Scan
                Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/FacilitiesTable

  #########################################
  # Add Facility Lambda Function
  #########################################

  AddFacilityFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: add-facility-function
      CodeUri: src/api/facilities/
      Handler: add_facility.lambda_handler
      Role: !GetAtt FacilitiesFunctionRole.Arn
      Events:
        AddFacility:
          Type: Api
          Properties:
            RestApiId: !Ref ListFacilitiesApi
            Path: /facilities
            Method: post
            Auth:
              Authorizer: CognitoAuthorizer

  #########################################
  # GET /facilities Function
  #########################################

  GetFacilitiesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: get-facilities-function
      CodeUri: src/api/facilities/
      Handler: get_facilities.lambda_handler
      Runtime: python3.9
      Role: !GetAtt FacilitiesFunctionRole.Arn
      Environment:
        Variables:
          TABLE_NAME: FacilitiesTable
      Events:
        GetFacilities:
          Type: Api
          Properties:
            RestApiId: !Ref ListFacilitiesApi
            Path: /facilities
            Method: get
            Auth:
              Authorizer: CognitoAuthorizer

Outputs:
  ApiUrl:
    Description: API Gateway endpoint URL for the ListFacilitiesFunction
    Value: !Sub 'https://${ListFacilitiesApi}.execute-api.${AWS::Region}.amazonaws.com/dev/facilities'